#!/usr/bin/env node
'use strict'

const path = require('path')
const Promise = require('bluebird-co')
const DependencyManager = require('../lib/dependency-manager')
const spawn = require('../util').spawn
const command = process.argv[2]
const dependencies = new DependencyManager()
const commands = ['all', 'setup', 'test']
const mocha = path.resolve(require.resolve('mocha'), '../bin/mocha')

function usage() {
  console.error('usage: ' + process.argv[1] + ' <command>')
  console.error('commands:')
  console.error('  all    # setup then test')
  console.error('  setup  # download five-bells services')
  console.error('  test   # run integration tests')
  process.exit(1)
}

if (commands.indexOf(command) === -1) usage()
Promise.coroutine(function * () {
  let code = 0
  if (command === 'all' || command === 'setup') {
    code = code || (yield dependencies.install())
  }
  if (command === 'all' || command === 'test') {
    code = code || (yield spawn(mocha, [
      __dirname + '/../tests/index.js',
      '--no-timeouts',
      '-r', 'co-mocha'
    ], {
      cwd: dependencies.testDir,
      stdio: 'inherit'
    }))
  }
  process.exit(code)
})().done()
